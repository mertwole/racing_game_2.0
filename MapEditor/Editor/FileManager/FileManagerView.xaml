<UserControl x:Class="Editor.FileManager.FileManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Editor.FileManager"
             xmlns:common="clr-namespace:Editor.Common"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="300">
    <UserControl.DataContext>
        <local:FileManagerVM/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <common:BindingProxy x:Key="Proxy" Data="{Binding}"/>
        <local:CallCheckSelected x:Key="CallCheckSelected"/>
        <local:FileIconEnumToImage x:Key="FileIconEnumToImage"/>

        <Style TargetType="{x:Type TextBox}" x:Key="DefaultTextBoxStyle">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border" CornerRadius="2"
                                Padding="2" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="#303030">
        <!--content tree-->
        <TreeView   ItemsSource="{Binding Hierarchy}" x:Name="MainTreeView"
                    Background="Transparent"
                    local:FileManagerVM.MainTreeView="{Binding ElementName=MainTreeView}" 
                    Margin="-1, -1, -1, -1" AllowDrop="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.FinishRenameItem}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="SelectedItemChanged">
                    <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.SelectItem}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseUp">
                    <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.SelectItemEnded}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="KeyDown">
                    <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DeleteItems}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="LostFocus">
                    <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.UnselectAllItems}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="LostFocus">
                    <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.FinishRenameItem}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="Drop">
                    <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DropItems}" 
                                           PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <!--overwrited MaterialDesignTreeView style from MaterialDesignInXAML-->
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="8" />
                    <Setter Property="FocusVisualStyle" Value="{StaticResource MaterialDesignTreeViewItemFocusVisual}"/>
                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup Name="CommonStates">
                                            <VisualState Name="Normal"/>
                                            <VisualState Name="MouseOver"/>
                                            <VisualState Name="Disabled"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="ExpansionStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0" To="Expanded">
                                                    <VisualTransition.GeneratedEasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </VisualTransition.GeneratedEasingFunction>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost" To="1" Duration="0:0:0.3"/>
                                                        <DoubleAnimation Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost" To="1" Duration="0:0:0.3"/>
                                                    </Storyboard>
                                                </VisualTransition>
                                                <VisualTransition GeneratedDuration="0" To="Collapsed">
                                                    <VisualTransition.GeneratedEasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </VisualTransition.GeneratedEasingFunction>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost" To="0" Duration="0:0:0.3"/>
                                                        <DoubleAnimation Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost" To="0" Duration="0:0:0.3"/>
                                                    </Storyboard>
                                                </VisualTransition>
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Expanded">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost" To="1" Duration="0"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost" To="1" Duration="0:0:0.3"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Collapsed">
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ItemsHost" To="0" Duration="0"/>
                                                    <DoubleAnimation Storyboard.TargetProperty="Scale" Storyboard.TargetName="ScaleHost" To="0" Duration="0:0:0.3"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>

                                    <md:ScaleHost x:Name="ScaleHost"/>

                                    <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                Style="{StaticResource MaterialDesignExpandCollapseToggleStyle}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Margin="16, 0, 0, 0"
                                                Panel.ZIndex="1"
                                                VerticalAlignment="Center"/>

                                    <Grid Grid.Column="1" Grid.ColumnSpan="2" 
                                          x:Name="ContentGrid" Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="PART_Header" ContentSource="Header"/>
                                    </Grid>

                                    <ContentControl Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                                        x:Name="AdditionalContentControl"
                                        Content="{TemplateBinding Header}"
                                        ContentTemplate="{Binding RelativeSource={RelativeSource Self}, Path=(md:TreeViewAssist.AdditionalTemplate)}"
                                        ContentTemplateSelector="{Binding RelativeSource={RelativeSource Self}, Path=(md:TreeViewAssist.AdditionalTemplateSelector)}"                                        
                                        Visibility="Collapsed">
                                    </ContentControl>

                                    <StackPanel Grid.Column="1" Grid.Row="2"
                                    x:Name="ItemsPanel"
                                    Margin="-16 0 0 0"
                                    Grid.ColumnSpan="2">
                                        <StackPanel.Height>
                                            <MultiBinding Converter="{StaticResource MathMlpMultipleConverter}">
                                                <Binding ElementName="ItemsHost" Path="ActualHeight"/>
                                                <Binding ElementName="ScaleHost" Path="Scale"/>
                                            </MultiBinding>
                                        </StackPanel.Height>
                                        <ItemsPresenter x:Name="ItemsHost"
                                            VerticalAlignment="Top"
                                            Opacity="0"
                                            Visibility="Collapsed"/>
                                    </StackPanel>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(md:TreeViewAssist.AdditionalTemplate), Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}" 
                                     Value="Visible">
                                        <Setter TargetName="AdditionalContentControl" Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(md:TreeViewAssist.AdditionalTemplateSelector), Converter={StaticResource NullableToVisibilityConverter}, Mode=OneWay}" 
                                     Value="Visible">
                                        <Setter TargetName="AdditionalContentControl" Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" Value=".56"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.Resources>
                <!--folder-->
                <HierarchicalDataTemplate DataType="{x:Type local:Folder}" ItemsSource="{Binding Contents}">
                    <StackPanel Orientation="Horizontal" AllowDrop="True" 
                                Focusable="True" Background="Transparent"
                                Margin="0, 0, -1000, 0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.StopDragItems}" 
                                               PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="MouseDown">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.StartDragItems}" 
                                               PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="MouseMove">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DragItems}" 
                                           PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="Drop">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DropItems}" 
                                           PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="DragLeave">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DragItemsLeave}"
                                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="DragEnter">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DragItemsEnter}"
                                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <!--context menu-->
                        <StackPanel.ContextMenu>
                            <ContextMenu Panel.ZIndex="1000">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Opened">
                                        <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                            Path=Data.ContextMenuOpened}"
                                                            PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <ContextMenu.Template>
                                    <ControlTemplate>
                                        <StackPanel Background="#474747" IsItemsHost="True"/>
                                    </ControlTemplate>
                                </ContextMenu.Template>

                                <MenuItem Focusable="False">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                            Path=Data.NewFolderContextMenu}" 
                                                            PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <MenuItem.Header>
                                        <TextBlock Text="new folder" Margin="4" Foreground="White" 
                                                   FontSize="12"/>
                                    </MenuItem.Header>
                                </MenuItem>
                                
                                <MenuItem Focusable="False">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                            Path=Data.NewBillboardContextMenu}" 
                                                            PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <MenuItem.Header>
                                        <TextBlock Text="new billboard" Margin="4" Foreground="White" 
                                                   FontSize="12"/>
                                    </MenuItem.Header>
                                </MenuItem>

                                <MenuItem Focusable="False">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                            Path=Data.NewGameObjectContextMenu}" 
                                                            PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <MenuItem.Header>
                                        <TextBlock Text="new game object" Margin="4" Foreground="White" 
                                                   FontSize="12"/>
                                    </MenuItem.Header>
                                </MenuItem>
                            </ContextMenu>
                        </StackPanel.ContextMenu>

                        <Grid IsHitTestVisible="False">
                            <!--drag highlight-->
                            <StackPanel Background="#474747"
                                    Panel.ZIndex="-100" Name="DragHighlight"
                                    Margin="0, 0, -1000, 0" Opacity="0"/>

                            <!--selection-->
                            <StackPanel Background="Orange"
                                    Name="Selection" Panel.ZIndex="-100"
                                    Margin="0, 0, -1000, 0"
                                    Opacity="{Binding .,Converter={StaticResource CallCheckSelected}, 
                                                UpdateSourceTrigger=Explicit}"/>
                        </Grid>

                        <!--icon-->
                        <md:PackIcon Kind="Folder" Width="20" Height="20" VerticalAlignment="Center"/>

                        <StackPanel Width="5"/>

                        <!--name-->
                        <Grid>
                            <TextBlock Text="{Binding ElementName=NameTextBox, Path=Text}" Focusable="True" Foreground="White"
                                       VerticalAlignment="Center">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.StartRenameItem}"
                                                PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBlock>

                            <TextBox Text="{Binding Name}" Focusable="True" 
                                     Name="NameTextBox" Style="{StaticResource DefaultTextBoxStyle}"
                                     Foreground="White" Visibility="Hidden"
                                     Margin="-5, 0, 0, 0">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.FinishRenameItem}"/>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="KeyDown">
                                        <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.FinishRenameItemByEnter}"
                                                PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </Grid>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <!--file-->
                <DataTemplate DataType="{x:Type local:File}">
                    <StackPanel Orientation="Horizontal" AllowDrop="True" Background="Transparent"
                                Margin="0, 0, -1000, 0" ClipToBounds="False">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.StopDragItems}" 
                                               PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="MouseDown">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.StartDragItems}" 
                                               PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="MouseMove">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DragItems}" 
                                           PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="Drop">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DropItems}" 
                                           PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="DragLeave">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DragItemsLeave}"
                                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="DragEnter">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                            Path=Data.DragItemsEnter}"
                                            PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="MouseDown">
                                <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.OpenFileEditor}"
                                                PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid IsHitTestVisible="False">
                            <!--drag highlight-->
                            <StackPanel Background="#474747"
                                    Panel.ZIndex="-100" Name="DragHighlight"
                                    Margin="0, 0, -1000, 0" Opacity="0"/>

                            <!--selection-->
                            <StackPanel Background="Orange"
                                    Name="Selection" Panel.ZIndex="-100"
                                    Margin="0, 0, -1000, 0"
                                    Opacity="{Binding .,Converter={StaticResource CallCheckSelected}, 
                                                UpdateSourceTrigger=Explicit}"/>
                        </Grid>

                        <!--icon-->
                        <Image Width="20" Height="20"
                            Source="{Binding Icon, Converter={StaticResource FileIconEnumToImage}}"/>

                        <StackPanel Width="5"/>

                        <!--name-->
                        <Grid>
                            <TextBlock Text="{Binding ElementName=NameTextBox, Path=Text}" Focusable="True" Foreground="White"
                                       VerticalAlignment="Center" HorizontalAlignment="Left">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDown">
                                        <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.StartRenameItem}"
                                                PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBlock>

                            <TextBox Text="{Binding Name}" Focusable="True" 
                                     Name="NameTextBox" Style="{StaticResource DefaultTextBoxStyle}"
                                     Foreground="White" Visibility="Hidden"
                                     Margin="-5, 0, 0, 0">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.FinishRenameItem}"/>
                                    </i:EventTrigger>

                                    <i:EventTrigger EventName="KeyDown">
                                        <common:EventToCommand Command="{Binding Source={StaticResource Proxy}, 
                                                Path=Data.FinishRenameItemByEnter}"
                                                PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                        </Grid>
                    </StackPanel>
                </DataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</UserControl>

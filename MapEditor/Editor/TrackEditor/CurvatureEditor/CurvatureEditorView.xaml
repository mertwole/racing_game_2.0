<UserControl x:Class="Editor.TrackEditor.CurvatureEditor.CurvatureEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Editor.TrackEditor.CurvatureEditor"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:common="clr-namespace:Editor.Common"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <local:CurvatureEditorVM/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <common:BindingProxy x:Key="Proxy" Data="{Binding}"/>
    </UserControl.Resources>

    <Grid Background="#474747" Name="Root">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <common:EventToCommand Command="{Binding StartCreate}"
                                    PassEventArgsToCommand="True"/>
            </i:EventTrigger>
            
            <i:EventTrigger EventName="MouseMove">
                <common:EventToCommand Command="{Binding CreateOrEdit}"
                                    PassEventArgsToCommand="True"/>
            </i:EventTrigger>

            <i:EventTrigger EventName="MouseLeftButtonUp">
                <common:EventToCommand Command="{Binding FinishCreateAndEdit}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <!--curvatures-->
        <ItemsControl ItemsSource="{Binding Curvatures}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" HorizontalAlignment="Stretch" 
                            x:Name="MainCanvas"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Left" Value="{Binding Start}"/>
                    <Setter Property="Canvas.Top" Value="0"/>
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Width="{Binding Length}" 
                          Height="{Binding ElementName=MainCanvas, Path=ActualHeight}">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="BackgroundBrush" Color="Orange"/>
                            <SolidColorBrush x:Key="FontBrush" Color="#303030"/>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>

                        <!--top/down border focus limiters-->
                        <Grid Grid.Column="0"
                              VerticalAlignment="Stretch" Background="{StaticResource BackgroundBrush}"
                              Margin="0, -5"/>

                        <Grid Grid.Column="2"
                              VerticalAlignment="Stretch" Background="{StaticResource BackgroundBrush}"
                              Margin="0, -5"/>
                        <!--left border-->
                        <Rectangle  Grid.Column="0"
                                    VerticalAlignment="Stretch" 
                                    Fill="{StaticResource BackgroundBrush}"
                                    Cursor="SizeWE"
                                    IsHitTestVisible="{Binding ElementName=MainCanvas, Path=DataContext.IsCurvatureNotEditing}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <common:EventToCommand 
                                        Command="{Binding ElementName=MainCanvas, Path=DataContext.StartEdit}"
                                        PassEventArgsToCommand="True"/>
                                </i:EventTrigger>

                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <common:EventToCommand 
                                        Command="{Binding ElementName=MainCanvas, Path=DataContext.FinishCreateAndEdit}"
                                        PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Rectangle>
                        <!--right border-->
                        <Rectangle  Grid.Column="2"
                                    VerticalAlignment="Stretch" 
                                    Fill="{StaticResource BackgroundBrush}"
                                    Cursor="SizeWE"
                                    IsHitTestVisible="{Binding ElementName=MainCanvas, Path=DataContext.IsCurvatureNotEditing}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <common:EventToCommand 
                                        Command="{Binding ElementName=MainCanvas, Path=DataContext.StartEdit}"
                                        PassEventArgsToCommand="True"/>
                                </i:EventTrigger>

                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                    <common:EventToCommand 
                                        Command="{Binding ElementName=MainCanvas, Path=DataContext.FinishCreateAndEdit}"
                                        PassEventArgsToCommand="True"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Rectangle>
                        <!--body-->
                        <Grid   Grid.Column="1"   
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch"
                                ClipToBounds="True"
                                Background="Transparent">

                            <Grid Background="{StaticResource BackgroundBrush}">
                                <TextBox    VerticalAlignment="Center"
                                            HorizontalAlignment="Stretch"
                                            HorizontalContentAlignment="Center"
                                            Foreground="{StaticResource FontBrush}"
                                            BorderThickness="0"
                                            CaretBrush="{StaticResource FontBrush}"
                                            CaretIndex="1000">
                                    <i:Interaction.Behaviors>
                                        <common:TextBoxEnterKeyUpdateBehavior/>
                                    </i:Interaction.Behaviors>

                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                            <common:EventToCommand 
                                                        Command="{Binding Source={StaticResource Proxy}, 
                                                        Path=Data.DeleteCurvatureAt}"
                                                        PassEventArgsToCommand="True"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>

                                    <TextBox.ContextMenu>
                                        <ContextMenu/>
                                    </TextBox.ContextMenu>

                                    <TextBox.Text>
                                        <Binding Path="Value" Mode="TwoWay" 
                                                 ConverterCulture="en-US">
                                            <Binding.ValidationRules>
                                                <common:DoubleInputValidationRule/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </Grid>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </Grid>
</UserControl>

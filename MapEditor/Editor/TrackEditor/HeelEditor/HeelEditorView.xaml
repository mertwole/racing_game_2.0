<UserControl x:Class="Editor.TrackEditor.HeelEditor.HeelEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Editor.TrackEditor.HeelEditor"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:common="clr-namespace:Editor.Common"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <local:HeelEditorVM/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <local:ListToPathSegmentCollectionConverter x:Key="ListToPathSegmentCollectionConverter"/>
        <local:XToPixelsConverter x:Key="XToPixelsConverter"/>
        <local:YToPixelsConverter x:Key="YToPixelsConverter"/>
        <common:BindingProxy x:Key="Proxy" Data="{Binding}"/>
    </UserControl.Resources>

    <i:Interaction.Behaviors>
        <common:ViewBehaviour/>
    </i:Interaction.Behaviors>

    <Grid Background="#474747" Name="Root">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseLeftButtonDown">
                <common:EventToCommand Command="{Binding CreateNewKeypoint}"
                                    PassEventArgsToCommand="True"/>
            </i:EventTrigger>

            <i:EventTrigger EventName="MouseMove">
                <common:EventToCommand Command="{Binding MoveKeypoint}"
                                    PassEventArgsToCommand="True"/>
            </i:EventTrigger>

            <i:EventTrigger EventName="MouseLeftButtonUp">
                <common:EventToCommand Command="{Binding FinishMoveKeypoint}"/>
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <!--graph-->
        <Grid>
            <!--graph opacity mask-->
            <Canvas ClipToBounds="True" Name="graphCanvas">
                <Path Fill="#474747">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="0,0" 
                                                Segments="{Binding GraphPoints
                                    ,Converter={StaticResource ListToPathSegmentCollectionConverter}}"/>
                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Canvas>
            <!--gradient fill-->
            <Rectangle>
                <Rectangle.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=graphCanvas}"/>
                </Rectangle.OpacityMask>

                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0, 0" EndPoint="0, 1">
                        <GradientStop Color="#AAFFA500" Offset="0.0"/>
                        <GradientStop Color="#11FFA500" Offset="1.0"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
            <!--graph stroke-->
            <Canvas>
                <Path Stroke="Orange" StrokeThickness="3">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigureCollection>
                                    <PathFigure StartPoint="0,0"
                                                Segments="{Binding GraphPoints
                                    ,Converter={StaticResource ListToPathSegmentCollectionConverter}}"/>
                                </PathFigureCollection>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Canvas>
        </Grid>
        <!--keypoints-->
        <ItemsControl ItemsSource="{Binding Keypoints}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas IsItemsHost="True" x:Name="MainCanvas">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <common:EventToCommand Command="{Binding ElementName=MainCanvas, Path=DataContext.MainCanvasLoaded}"
                                    PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="SizeChanged">
                                <common:EventToCommand Command="{Binding ElementName=MainCanvas, Path=DataContext.MainCanvasSizeChanged}"
                                    PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemContainerStyle>
                <Style>
                    <Setter Property="Canvas.Left">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource XToPixelsConverter}">
                                <Binding Path="X"/>
                                <Binding Source="{StaticResource Proxy}" Path="Data"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Canvas.Bottom">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource YToPixelsConverter}">
                                <Binding Path="Y"/>
                                <Binding Source="{StaticResource Proxy}" Path="Data"/>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Ellipse Width="10" Height="10" 
                             Fill="Orange" Margin="-5, 0, 0, -5">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <common:EventToCommand Command="{Binding ElementName=MainCanvas, Path=DataContext.StartMoveKeypoint}"
                                    PassEventArgsToCommand="True"/>
                            </i:EventTrigger>

                            <i:EventTrigger EventName="MouseRightButtonDown">
                                <common:EventToCommand Command="{Binding ElementName=MainCanvas, Path=DataContext.RemoveKeypoint}"
                                    PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Ellipse>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Grid Width="32" Height="16" Margin="4" VerticalAlignment="Top" HorizontalAlignment="Left">
            <TextBox    Style="{x:Null}"    
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Foreground="Orange"
                        BorderThickness="0"
                        Background="#303030"
                        CaretBrush="Orange"
                        CaretIndex="1000">
                <i:Interaction.Behaviors>
                    <common:TextBoxEnterKeyUpdateBehavior/>
                </i:Interaction.Behaviors>

                <TextBox.ContextMenu>
                    <ContextMenu/>
                </TextBox.ContextMenu>

                <TextBox.Text>
                    <Binding Path="EditorHeight" Mode="TwoWay" ConverterCulture="en-US">
                        <Binding.ValidationRules>
                            <common:DoubleInputValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
    </Grid>
</UserControl>
